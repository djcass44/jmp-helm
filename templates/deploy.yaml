apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name.api }}
spec:
  replicas: {{ .Values.replicas.api }}
  selector:
    matchLabels:
      app: {{ .Values.name.api }}
  template:
    metadata:
      labels:
        app: {{ .Values.name.api }}
    spec:
      automountServiceAccountToken: false
      securityContext:
        fsGroup: 100
        runAsUser: 100
        runAsGroup: 101
      {{ if .Values.fs.claimName.api }}
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: {{ .Values.fs.claimName.api }}
      {{ end }}
      containers:
      - env:
        - name: DRIVER_CLASS
          value: {{ .Values.db.driver }}
        - name: DRIVER_URL
          value: {{ .Values.db.url }}
        - name: DRIVER_USER
          value: {{ .Values.db.user }}
        - name: DRIVER_PASSWORD
          value: {{ .Values.db.password }}
        - name: BASE_URL
          value: {{ .Values.app.url }}
        - name: LOG_ENABLED
          value: {{ .Values.log.enabled | quote }}
        - name: LOG_DIRECTORY
          value: {{ .Values.log.directory }}
        - name: JMP_HOME
          value: {{ .Values.fs.home }}
        - name: JMP_ALLOW_ERROR_INFO
          value: {{ .Values.app.errorInfo | quote }}
        - name: CASE_SENSITIVE
          value: {{ .Values.app.case | quote }}
        - name: PORT
          value: {{ .Values.port.api | quote }}
        - name: KEY_REALM
          value: {{ .Values.key.realm }}
        - name: KEY_AWS_SSM_NAME
          value: {{ .Values.key.aws.name }}
        - name: FAV2_URL
          value: {{ .Values.app.fav2.url }}
        image: "djcass44/jmp:{{ .Values.image.api }}"
        imagePullPolicy: Always
        name: {{ .Values.name.api }}
        ports:
        - containerPort: {{ .Values.port.api }}
          name: http
        {{ if .Values.fs.claimName.api }}
        volumeMounts:
        - mountPath: {{ .Values.fs.home }}
          name: data
        {{ end }}
        readinessProbe:
          httpGet:
            path: /api/v3/health
            port: {{ .Values.port.api }}
          initialDelaySeconds: 5
          periodSeconds: 5
        securityContext:
          runAsNonRoot: true
          privileged: false
          capabilities:
            drop:
              - all
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name.ui }}
spec:
  replicas: {{ .Values.replicas.ui }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 50%
  selector:
    matchLabels:
      app: {{ .Values.name.ui }}
  template:
    metadata:
      labels:
        app: {{ .Values.name.ui }}
    spec:
      automountServiceAccountToken: false
      securityContext:
        fsGroup: 100
        runAsUser: 101
        runAsGroup: 101
      volumes:
      - name: tmp
        emptyDir: {}  
      containers:
      - image: "djcass44/jmp-ui:{{ .Values.image.ui }}"
        imagePullPolicy: Always
        name: {{ .Values.name.ui }}
        env:
          - name: JMP_API_URL
            value: {{ .Values.app.host }}
          - name: JMP_API_SECURE
            value: {{ .Values.app.secure | quote }}
          {{- with .Values.app.brand }}
          - name: JMP_BRAND_NAME
            value: {{ .name }}
          - name: JMP_BRAND_MSG
            value: {{ .msg }}
          - name: JMP_BRAND_NOUN
            value: {{ .noun }}
          - name: JMP_BRAND_KEY
            value: {{ .key }}
          {{- end }}
        ports:
        - containerPort: 8080
          name: http
        volumeMounts:
        - name: tmp
          mountPath: /var/tmp/nginx
        livenessProbe:
          httpGet:
            path: /probe
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 3
        readinessProbe:
          httpGet:
            path: /probe
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
        securityContext:
          runAsNonRoot: true
          privileged: false
          # capabilities:
            # drop:
              # - all
            # add:
              # - CHOWN
              # - FOWNER
          allowPrivilegeEscalation: false
      restartPolicy: Always